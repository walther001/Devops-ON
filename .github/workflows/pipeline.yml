name: pipeline

on:
  push:
  workflow_dispatch:

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: mvn test

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2.0.1

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4.4.0
        with:
          name: jacoco-report
          path: target/site/jacoco

  code-analisys:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_AUTOGLASS }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.qualitygate.wait=true \
          -Dsonar.projectKey=devopsfiap_devopsimpacta

  build:
    runs-on: ubuntu-latest
    needs: code-analisys

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: target/

      - name: Upload JAR
        uses: actions/upload-artifact@v4.4.0
        with:
          name: artifact
          path: ./target/demo-0.0.2.7-SNAPSHOT.jar

      - name: Package
        run: mvn package

  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Publish package
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-azure:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: AZURE-PRO
      url: https://devopsfiap-on-app.azurewebsites.net/

    steps:
      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: target/

      - name: Deploy to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: devopsfiap-on-app
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: '${{ github.workspace }}/target/*.jar'

  deploy-STG:
    runs-on: ubuntu-latest
    needs: publish
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Deploy STG
        run: echo "Deploy STG"

  Smoketest:
    runs-on: ubuntu-latest
    needs: deploy-STG
    if: github.ref == 'refs/heads/develop'

    steps:
      - uses: actions/checkout@v3
      - name: Smoke Test
        run: sh src/main/scripts/smoketest.sh

  testeIntegrados:
    runs-on: ubuntu-latest
    needs: Smoketest
    if: github.ref == 'refs/heads/develop'

    steps:
      - uses: actions/checkout@v3
      - name: Integrated Tests
        run: sh src/main/scripts/testeIntegrado.sh
